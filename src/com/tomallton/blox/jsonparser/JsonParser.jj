options
{
  static = true;
}

PARSER_BEGIN(JsonParser)

package com.tomallton.blox.jsonparser;

import java.math.BigDecimal;
import java.math.BigInteger;

public class JsonParser {

  public static void main(String[] args) throws ParseException {
    // https://github.com/RobertFischer/json-parser/blob/master/src/main/javacc/com/smokejumperit/json/parser/JSONParser.jj
    JsonParser parser = new JsonParser(System.in);
    parser.parse();
  }

}

PARSER_END(JsonParser)

TOKEN :
{
  < #QUOTE: "\"" > |
  < #SQUARE_BRACKET_OPEN: "[" > |
  < #SQUARE_BRACKET_CLOSE: "]" > |
  < #DIGIT: ["0"-"9"] > |
  < INTEGER: ("-")? (<DIGIT>)+ > |
  < DECIMAL: ("-")? (<DIGIT>)* "." (<DIGIT>)+ > |
  < STRING: < QUOTE > (~["\""])+ < QUOTE > >
}

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
}

Object parse() throws ParseException :
{
  Object json;
}
{
  json=element()
  { return json; }
}

Object element() : 
{
  Object element;
}
{
  element=value()/* | array() | object()*/
  { return element; }
}

Object value() :
{
  Object value;
}
{
  value=number()
  { return value; }
}

Number number() :
{
  Token token;
}
{
  (
    token = < INTEGER >
    {
      return new BigInteger(token.image);
    }
  ) |
  (
    token = < DECIMAL >
    {
      return new BigDecimal(token.image);
    }
  ) 
}


String string() :
{
}
{
  < STRING >
  {
    String image = token.image;
    if (image.length() <= 2) {
      return "";
    }
    return image.substring(1, image.length() - 1);
  }
}


/*
List<Object> array() :
{
  List<Object> array = new ArrayList<>();
  Object element;
}
{
  <SQUARE_BRACKET_OPEN>
	element = element();
	{
	  array.add(element);
	  value = null;
	}
	(
	  <COMMA>
	  element = element();
	    {
	      array.add(element);
	      value = null;
	    }
	)*
  <SQUARE_BRACKET_CLOSE>
}

/*JsonObject object() :
{
  
}
{

}*/